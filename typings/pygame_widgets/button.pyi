"""
This type stub file was generated by pyright.
"""

from pygame_widgets.widget import WidgetBase

class Button(WidgetBase):
    def __init__(self, win, x, y, width, height, isSubWidget=..., **kwargs) -> None:
        """ A customisable button for Pygame

        :param win: Surface on which to draw
        :type win: pygame.Surface
        :param x: X-coordinate of top left
        :type x: int
        :param y: Y-coordinate of top left
        :type y: int
        :param width: Width of button
        :type width: int
        :param height: Height of button
        :type height: int
        :param kwargs: Optional parameters
        """
        ...
    
    def alignImageRect(self): # -> None:
        ...
    
    def alignTextRect(self): # -> None:
        ...
    
    def listen(self, events):
        """ Wait for inputs

        :param events: Use pygame.event.get()
        :type events: list of pygame.event.Event
        """
        ...
    
    def draw(self): # -> None:
        """ Display to surface """
        ...
    
    def setImage(self, image): # -> None:
        ...
    
    def setOnClick(self, onClick, params=...): # -> None:
        ...
    
    def setOnRelease(self, onRelease, params=...): # -> None:
        ...
    
    def setInactiveColour(self, colour): # -> None:
        ...
    
    def setPressedColour(self, colour): # -> None:
        ...
    
    def setHoverColour(self, colour): # -> None:
        ...
    
    def get(self, attr): # -> tuple[Literal[150], Literal[150], Literal[150]] | tuple[Literal[100], Literal[100], Literal[100]] | tuple[Literal[125], Literal[125], Literal[125]] | None:
        ...
    
    def set(self, attr, value): # -> None:
        ...
    


class ButtonArray(WidgetBase):
    def __init__(self, win, x, y, width, height, shape, **kwargs) -> None:
        """ A collection of buttons

        :param win: Surface on which to draw
        :type win: pygame.Surface
        :param x: X-coordinate of top left
        :type x: int
        :param y: Y-coordinate of top left
        :type y: int
        :param width: Width of button
        :type width: int
        :param height: Height of button
        :type height: int
        :param shape: The 2d shape of the array (columns, rows)
        :type shape: tuple of int
        :param kwargs: Optional parameters
        """
        ...
    
    def createButtons(self): # -> None:
        ...
    
    def listen(self, events): # -> None:
        """ Wait for inputs

        :param events: Use pygame.event.get()
        :type events: list of pygame.event.Event
        """
        ...
    
    def draw(self): # -> None:
        """ Display to surface """
        ...
    
    def getButtons(self): # -> list[Unknown]:
        ...
    


if __name__ == '__main__':
    win = ...
    button = ...
    buttonArray = ...
    run = ...
